/*
COLORS:
Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/

*,
*::after,
*::before {
  margin: 0px;
  padding: 0px;
  box-sizing: inherit;
}

/* setting font size here allows for REM to be used throughout project */
html {
  font-size: 62.5%;
}
/*
Use body for all things font related to utilize inheritence in CSS.
 */
body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size:  16px;
  line-height: 1.7; /*1.7 times the default*/
  color: #555;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
    to right bottom,
    rgba(126, 213, 111, 0.8),
    rgba(40, 180, 131, 0.8)),
  url(../img/hero.jpg);
  background-size: cover;
  /* ensure the top of the image always stays at the top of the viewport */
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%); /* half of the width to the left half of the width to the top */
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* Used to hide the backside of element during a rotation
  fixes shaking in css animation */
  backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation-iteration-count: 3;  */
  /* animation-delay: 3s;  */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveInRight 1s ease-out;

}

/* ANIMATIONS */
/* Browsers are optimized for the opacity and transform properties  */


@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  80% {
    transform: translateX(1rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {
    transform: translateX(-1rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }


  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* ============================== */
/* INITIAL STATE */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s; /* transition property must be applied on initial state */
  backface-visibility: hidden;
  position: relative;
  font-size: 1.6rem;
}
/* ============================== */

.btn:hover {
  transform: translateY(-.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2);
}

.btn:active {
  transform: translateY(-.1rem);
  box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
}

.btn--white {
  background-color: #fff;
  color: #555;
}

.btn--animated {
  animation: moveInBottom .5s ease-out .75s;
  animation-fill-mode: backwards;
}

.btn::after {
  content: ""; /*must always be present in ::after and ::before pseudo classes*/
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}

.btn--white::after{
  background-color: #fff;
  transition: all .4s;
}

.btn--white:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}
